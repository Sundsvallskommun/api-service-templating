openapi: 3.0.1
info:
  title: Templating
  description: Uses <a href="https://pebbletemplates.io/" target="_blank">Pebble Templates</a>
  contact: {}
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /templates:
    get:
      tags:
      - Template resources
      summary: Get all available templates
      operationId: getAllTemplates
      parameters:
      - name: filters
        in: query
        description: Metadata filters
        required: false
        schema:
          type: object
          additionalProperties:
            type: string
          default: "{}"
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateResponse'
    post:
      tags:
      - Template resources
      summary: Store a template
      operationId: saveTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
  /render:
    post:
      tags:
      - Rendering resources
      summary: "Render a stored template, optionally with parameters"
      operationId: render
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderResponse'
  /render/pdf:
    post:
      tags:
      - Rendering resources
      summary: "Render a stored template as a PDF, optionally with parameters"
      operationId: renderPdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderResponse'
  /render/direct:
    post:
      tags:
      - Rendering resources
      summary: "Render provided template contents, optionally with parameters"
      operationId: renderDirect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectRenderRequest'
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectRenderResponse'
  /templates/{identifier}:
    get:
      tags:
      - Template resources
      summary: "Get a template by identifier, including content"
      operationId: getTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedTemplateResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      tags:
      - Template resources
      summary: Delete a template
      operationId: deleteTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
      - Template resources
      summary: Update a template
      operationId: updateTemplate
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              example:
              - op: add|remove|replace
                path: /some/attribute/path
                value: '...'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
  /api-docs:
    get:
      tags:
      - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    DefaultValue:
      type: object
      properties:
        fieldName:
          type: string
          description: Field name
        value:
          type: string
          description: Value
      description: Template default value
    Metadata:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: Metadata
    TemplateRequest:
      type: object
      properties:
        identifier:
          type: string
          description: "Identifier. May contain letters, digits, dashes and dots"
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
          nullable: true
        content:
          type: string
          description: "Content, as a BASE64-encoded string"
        metadata:
          type: array
          description: Metadata
          items:
            $ref: '#/components/schemas/Metadata'
        defaultValues:
          type: array
          description: Default values
          items:
            $ref: '#/components/schemas/DefaultValue'
      description: Template request
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        title:
          type: string
        detail:
          type: string
        status:
          $ref: '#/components/schemas/StatusType'
    StatusType:
      type: object
      properties:
        reasonPhrase:
          type: string
        statusCode:
          type: integer
          format: int32
    TemplateResponse:
      type: object
      properties:
        identifier:
          type: string
          description: Identifier
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        metadata:
          type: array
          description: Metadata
          items:
            $ref: '#/components/schemas/Metadata'
        defaultValues:
          type: array
          description: Default values
          items:
            $ref: '#/components/schemas/DefaultValue'
      description: Template
    KeyValue:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: Template metadata
      nullable: true
    RenderRequest:
      type: object
      properties:
        identifier:
          type: string
          description: Template identifier
          nullable: true
        metadata:
          type: array
          description: Template metadata
          nullable: true
          items:
            $ref: '#/components/schemas/KeyValue'
        parameters:
          type: object
          additionalProperties:
            type: object
            description: Parameters
            nullable: true
          description: Parameters
          nullable: true
      description: Request to render a template
    RenderResponse:
      type: object
      properties:
        output:
          type: string
          description: "Output, as a BASE64-encoded string"
    DirectRenderRequest:
      required:
      - content
      type: object
      properties:
        content:
          type: string
          description: The template content
        parameters:
          type: object
          additionalProperties:
            type: object
            description: Parameters
            nullable: true
          description: Parameters
          nullable: true
      description: Request to render a template directly
    DirectRenderResponse:
      type: object
      properties:
        output:
          type: string
          description: "Output, as a BASE64-encoded string"
    DetailedTemplateResponse:
      type: object
      properties:
        identifier:
          type: string
          description: Identifier
        name:
          type: string
          description: Name
        description:
          type: string
          description: Description
        metadata:
          type: array
          description: Metadata
          items:
            $ref: '#/components/schemas/Metadata'
        defaultValues:
          type: array
          description: Default values
          items:
            $ref: '#/components/schemas/DefaultValue'
        content:
          type: string
          description: "Content, as a BASE64-encoded string"
      description: Detailed template
  securitySchemes: {}
